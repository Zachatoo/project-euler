{"version":3,"sources":["hoc/AppContext/AppContext.js","components/Layout/index.js","constants/axios.js","constants/problems.js","components/CodeRunner/index.js","components/CodeSnippet/index.js","components/Header/index.js","components/LoadingIcon/index.js","components/Overlay/index.js","components/Sidebar/index.js","containers/ProjectEuler/index.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","globalState","setGlobalState","Provider","value","Layout","className","axiosOptions","baseURL","problems","key","title","prompt","codeStringified","completed","CodeRunner","problemNumber","isLoading","setIsLoading","isResultVisible","setIsResultVisible","result","setResult","useEffect","_runCode","a","axios","url","res","data","_clear","Button","variant","onClick","Collapse","in","CodeSnippet","Header","toggleSidebar","problemCount","icon","completedProblems","totalProblems","LoadingIcon","size","spin","Overlay","setOverlayVisible","Sidebar","open","select","toggle","map","problem","DEFAULT_PROBLEM_COUNT","ProjectEuler","props","setProblemCount","sessionStorage","getItem","visibleProblem","setVisibleProblem","isSidebarOpen","setIsSidebarOpen","tempProblemCount","forEach","_toggleSidebar","setItem","removeItem","state","iconList","Object","keys","Icons","filter","library","add","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a074da5f.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [globalState, setGlobalState] = useState();\r\n\r\n  return (\r\n    <AppContext.Provider value={[globalState, setGlobalState]}>\r\n      { children }\r\n    </AppContext.Provider>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen min-w-screen overflow-hidden\">\r\n      <main>\r\n        { children }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","const baseUrl = process.env.NODE_ENV === 'production'\r\n  ? 'https://ieczyc27e2.execute-api.us-west-2.amazonaws.com/Production'\r\n  : 'https://ieczyc27e2.execute-api.us-west-2.amazonaws.com/Staging'\r\n\r\nexport const axiosOptions = {\r\n  baseURL: baseUrl,\r\n};","export const problems = [\r\n  {\r\n    key: 1,\r\n    title: 'Multiples of 3 and 5',\r\n    prompt:\r\n      <>\r\n        <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.<br />\r\n        The sum of these multiples is 23.</p>\r\n        <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>\r\n      </>,\r\n    codeStringified:\r\n`var sum = 0;\r\nfor (var i = 1; i < 1000; ++i)\r\n{\r\n  if (i % 3 == 0 || i % 5 == 0)\r\n    sum += i;\r\n}\r\nreturn sum;`,\r\n    completed: true,\r\n  },\r\n  {\r\n    key: 2,\r\n    title: 'Even Fibonacci numbers',\r\n    prompt:\r\n      <>\r\n        <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>\r\n        <p className=\"text-center\">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>\r\n        <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>\r\n      </>,\r\n    codeStringified:\r\n`var maxNum = 4000000;\r\nvar prevNum = 1;\r\nvar nextNum = 1;\r\nvar sum = 0;\r\nwhile (nextNum <= maxNum)\r\n{\r\n  if (nextNum % 2 == 0)\r\n    sum += nextNum;\r\n  prevNum = nextNum - prevNum;\r\n  nextNum += prevNum;\r\n}\r\nreturn sum;`,\r\n    completed: true,\r\n  },\r\n  {\r\n    key: 3,\r\n    title: 'Largest prime factor',\r\n    prompt:\r\n      <>\r\n        <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>\r\n        <p>What is the largest prime factor of the number 600851475143?</p>\r\n      </>,\r\n    codeStringified:\r\n`var targetNum = 600851475143;\r\n\r\nstatic bool IsPrime(long num)\r\n{\r\n  var result = num > 1;\r\n  for (var i = 2; i < Math.Floor(Math.Sqrt(num)) + 1; ++i)\r\n  {\r\n    if (num % i == 0)\r\n    {\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfor (var i = targetNum / 2; i >= 3; --i)\r\n{\r\n  if (targetNum % i == 0)\r\n  {\r\n    if (IsPrime(i))\r\n    {\r\n      return i;\r\n    }\r\n  }\r\n}`,\r\n    completed: false,\r\n  },\r\n];","import React, { useState, useEffect } from 'react';\r\nimport { Button, Collapse } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport { LoadingIcon } from '../../components';\r\nimport { axiosOptions } from '../../constants';\r\n\r\nexport const CodeRunner = ({ problemNumber }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isResultVisible, setIsResultVisible] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [executionTime, setExecutionTime] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n    setIsResultVisible(false);\r\n  }, [problemNumber]);\r\n\r\n  const _runCode = async () => {\r\n    setIsLoading(true);\r\n    setIsResultVisible(false);\r\n    const res = await axios({...axiosOptions, url: `/problems/${problemNumber}`});\r\n    setResult(res.data);\r\n    setIsLoading(false);\r\n    setIsResultVisible(true);\r\n  }\r\n  \r\n  const _clear = () => {\r\n    setResult(null);\r\n    setIsResultVisible(false);\r\n  }\r\n  useEffect(_clear, [problemNumber]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`flex mb-1 ${isResultVisible ? \"justify-between\" : \"justify-end\"}`}>\r\n        {isResultVisible &&\r\n        <div className=\"flex bg-gray-200 w-full rounded-md px-2\">\r\n          {/* <span className=\"my-auto\">{result ? `Success! Execution time: ${executionTime}ms` : 'Failed! Check your code and try again.'}</span> */}\r\n          <span className=\"my-auto\">{result ? 'Success!' : 'Failed! Check your code and try again.'}</span>\r\n        </div>}\r\n        <>\r\n          {result &&\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"ml-1\"\r\n            onClick={_clear}\r\n          >\r\n            Clear\r\n          </Button>}\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"ml-1\"\r\n            onClick={_runCode}\r\n          >\r\n            Run {isLoading && <LoadingIcon />}\r\n          </Button>\r\n        </>\r\n      </div>\r\n      <Collapse in={isResultVisible && !!result}>\r\n        <div className=\"bg-gray-300 w-full rounded-md px-2\">\r\n          {result}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CodeRunner;","import React from 'react';\r\n\r\nexport const CodeSnippet = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-gray-300 rounded-lg mb-1\">\r\n      <code className=\"flex flex-wrap whitespace-pre-wrap text-black px-3 py-2\">\r\n        { children }\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeSnippet;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const Header = ({ toggleSidebar, problemCount }) => {\r\n  return (\r\n    <div className=\"fixed w-full top-0 pt-2 pb-1 text-gray-700 bg-blue-300\">\r\n      <button\r\n        className=\"fixed ml-1 p-1\"\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FontAwesomeIcon icon=\"bars\" className=\"text-lg\" />\r\n      </button>\r\n      <h2 className=\"text-center text-2xl font-bold leading-8 xs:text-3xl\">\r\n        Project Euler\r\n      </h2>\r\n      <div className=\"mx-4\">\r\n        <div className=\"flex flex-wrap max-w-3xl m-auto mt-1 flex justify-between text-sm text-center xs:mt-0\">\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"address-card\" />\r\n            <span className=\"text-gray-600 pl-2\">Zachary Young</span>\r\n          </div>\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"check\" />\r\n            <span className=\"text-gray-600 pl-2\">{problemCount.completedProblems} out of {problemCount.totalProblems}</span>\r\n          </div>\r\n          <div className=\"hidden xs:flex mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"text-gray-600 pl-2\">Started on March 7, 2021</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const LoadingIcon = ({ size }) => (\r\n  <FontAwesomeIcon icon=\"circle-notch\" size={size} spin />\r\n);\r\n\r\nexport default LoadingIcon;","import React from 'react';\r\n\r\nexport const Overlay = ({ setOverlayVisible }) => (\r\n  <div\r\n    className=\"fixed w-screen h-screen inset-0 bg-gray-600 bg-opacity-70 z-10\"\r\n    onClick={() => setOverlayVisible(false)}\r\n  />\r\n);\r\n\r\nexport default Overlay;","import React from 'react';\r\n\r\nimport { Overlay } from '../Overlay';\r\nimport { problems } from '../../constants';\r\n\r\nexport const Sidebar = ({ open, select, toggle }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          `fixed inset-y-0 left-0 z-30 w-64 overflow-y-auto transition duration-300 transform border-r-2 bg-gray-100\r\n          ${open ? \"ease-out translate-x-0\" : \"ease-in -translate-x-full\"}`}\r\n      >\r\n        <div\r\n          className=\"cursor-pointer py-2 pl-4 hover:bg-gray-200\"\r\n          onClick={() => select()}\r\n        >\r\n          <span>Project Description</span>\r\n        </div>\r\n        {problems?.map(problem => (\r\n          <div\r\n            key={problem.key}\r\n            className=\"cursor-pointer py-2 pl-2 hover:bg-gray-200\"\r\n            onClick={() => select(problem)}\r\n          >\r\n            <span>{problem.key}. {problem.title}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {open &&\r\n        <Overlay setOverlayVisible={toggle} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Header, CodeSnippet, CodeRunner, Sidebar } from '../../components';\r\nimport { problems } from '../../constants';\r\n\r\nconst DEFAULT_PROBLEM_COUNT = {\r\n  completedProblems: 0,\r\n  totalProblems: 100,\r\n};\r\n\r\nconst ProjectEuler = (props) => {\r\n  const [problemCount, setProblemCount] = useState(DEFAULT_PROBLEM_COUNT);\r\n  const [visibleProblem, setVisibleProblem] =\r\n    useState(problems[\r\n      sessionStorage.getItem('currentProblem') - 1 || 0\r\n    ]);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tempProblemCount = {...problemCount};\r\n    let completed = 0;\r\n    problems.forEach(problem => {\r\n      if (problem.completed)\r\n        completed++;\r\n    });\r\n    tempProblemCount.completedProblems = completed;\r\n    setProblemCount(tempProblemCount);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    _toggleSidebar(false);\r\n    if (visibleProblem)\r\n      sessionStorage.setItem('currentProblem', visibleProblem.key);\r\n    else\r\n      sessionStorage.removeItem('currentProblem');\r\n  }, [visibleProblem]);\r\n\r\n  const _toggleSidebar = (state) => {\r\n    setIsSidebarOpen(state ?? !isSidebarOpen);\r\n  }\r\n\r\n  const _selectProblem = (problem) => {\r\n    setVisibleProblem(problem);\r\n    _toggleSidebar(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        open={isSidebarOpen}\r\n        select={_selectProblem}\r\n        toggle={_toggleSidebar}\r\n      />\r\n      <Header toggleSidebar={_toggleSidebar} problemCount={problemCount} />\r\n      <div className=\"max-w-4xl mt-20 mx-auto p-4\">\r\n        {visibleProblem ?\r\n        <>\r\n          <div className=\"text-center text-2xl pb-2\">\r\n            <span>Problem {visibleProblem.key}: </span>\r\n            <span>{visibleProblem.title}</span>\r\n            {!visibleProblem.completed && (\r\n              <span> (WIP)</span>\r\n            )}\r\n          </div>\r\n          {visibleProblem.prompt}\r\n          {!!visibleProblem.codeStringified &&\r\n          <div className=\"max-w-3xl mx-auto mb-1\">\r\n            <CodeSnippet>\r\n              {visibleProblem.codeStringified}\r\n            </CodeSnippet>\r\n            {visibleProblem.completed && (\r\n              <CodeRunner problemNumber={visibleProblem.key} />\r\n            )}\r\n          </div>}\r\n        </>\r\n        : <div>\r\n          Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve.\r\n          Although mathematics will help you arrive at elegant and efficient methods,\r\n          the use of a computer and programming skills will be required to solve most problems.\r\n        </div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectEuler;","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\nimport './App.scss';\nimport './index.css';\n\nimport { AppProvider } from './hoc/AppContext/AppContext';\nimport Layout from './components/Layout';\nimport ProjectEuler from './containers/ProjectEuler';\n\nconst iconList = Object\n  .keys(Icons)\n  .filter(key => key !== 'fas' && key !== 'prefix')\n  .map(icon => Icons[icon]);\nlibrary.add(...iconList);\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Layout>\n        <ProjectEuler />\n      </Layout>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}