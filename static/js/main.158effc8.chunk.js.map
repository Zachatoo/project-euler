{"version":3,"sources":["components/Header/Header.module.scss","constants/problems/index.js","hoc/AppContext/AppContext.js","components/Layout/index.js","components/CodeRunner/index.js","components/CodeSnippet/index.js","components/Header/index.js","components/LoadingIcon/index.js","components/Overlay/index.js","components/Sidebar/index.js","containers/ProjectEuler/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","problems","key","title","prompt","code","result","i","push","join","codeStringified","completed","className","DEFAULT_STATE","completedProblems","totalProblems","AppContext","createContext","AppProvider","children","useState","globalState","setGlobalState","useEffect","tempGlobalState","forEach","problem","Provider","value","Layout","useContext","CodeRunner","isLoading","setIsLoading","isResultVisible","setIsResultVisible","setResult","Button","variant","onClick","call","toString","CodeSnippet","Header","toggleSidebar","icon","styles","date","LoadingIcon","size","spin","Overlay","setOverlayVisible","Sidebar","open","select","toggle","map","ProjectEuler","props","visibleProblem","setVisibleProblem","isSidebarOpen","setIsSidebarOpen","state","iconList","Object","keys","Icons","filter","library","add","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.158effc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Header_date__1_KTb\"};","export const problems = [\r\n  {\r\n    key: 1,\r\n    title: 'Multiples of 3 and 5',\r\n    prompt:\r\n      <>\r\n        <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.<br />\r\n        The sum of these multiples is 23.</p>\r\n        <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>\r\n      </>,\r\n    code: () => {\r\n      const MAX_NUM = 1000;\r\n      let result = [];\r\n      for (let i = 1; i < MAX_NUM; ++i) {\r\n        if (i % 3 === 0 || i % 5 === 0)\r\n          result.push(i);\r\n      }\r\n      return result.join(', ');\r\n    },\r\n    codeStringified:\r\n`const MAX_NUM = 1000;\r\nlet result = [];\r\nfor (let i = 1; i < MAX_NUM; ++i) {\r\n  if (i % 3 === 0 || i % 5 === 0)\r\n    result.push(i);\r\n}\r\nreturn result.join(', ');`,\r\n    completed: 1,\r\n  },\r\n  {\r\n    key: 2,\r\n    title: 'Even Fibonacci numbers',\r\n    prompt:\r\n      <>\r\n        <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>\r\n        <p className=\"center\">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>\r\n        <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>\r\n      </>,\r\n    code: () => {\r\n      return null;\r\n    },\r\n    completed: 0,\r\n  },\r\n  {\r\n    key: 3,\r\n    title: 'Largest prime factor',\r\n    prompt:\r\n      <>\r\n        <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>\r\n        <p>What is the largest prime factor of the number 600851475143 ?</p>\r\n      </>,\r\n    code: () => {\r\n      return null;\r\n    },\r\n    completed: 0,\r\n  },\r\n];\r\n\r\nexport default problems;","import React, { createContext, useState, useEffect } from 'react';\r\nimport { problems } from '../../constants';\r\n\r\nconst DEFAULT_STATE = {\r\n  completedProblems: 0,\r\n  totalProblems: 100,\r\n};\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [globalState, setGlobalState] = useState(DEFAULT_STATE);\r\n\r\n  useEffect(() => {\r\n    let tempGlobalState = {...globalState};\r\n    let completed = 0;\r\n    problems.forEach(problem => {\r\n      if (problem.completed)\r\n        completed++;\r\n    });\r\n    tempGlobalState.completedProblems = completed;\r\n    setGlobalState(tempGlobalState);\r\n  }, [problems]);\r\n\r\n  return (\r\n    <AppContext.Provider value={[globalState, setGlobalState]}>\r\n      { children }\r\n    </AppContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { AppContext } from '../../hoc/AppContext/AppContext'\r\n\r\nexport const Layout = ({ children }) => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen min-w-screen overflow-hidden\">\r\n      <main>\r\n        { children }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { LoadingIcon } from '../../components';\r\n\r\nexport const CodeRunner = ({ code }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isResultVisible, setIsResultVisible] = useState(false);\r\n  const [result, setResult] = useState();\r\n\r\n  const runCode = () => {\r\n    setIsLoading(true);\r\n    setIsResultVisible(false);\r\n    const result = code.call()?.toString();\r\n    setResult(result);\r\n    setIsResultVisible(true);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const clear = () => {\r\n    setResult(null);\r\n    setIsResultVisible(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`flex mb-1 ${isResultVisible ? \"justify-between\" : \"justify-end\"}`}>\r\n        {isResultVisible &&\r\n        <div className=\"flex bg-gray-200 w-full rounded-md px-2 mr-1\">\r\n          <span className=\"my-auto\">{result ? 'Success! Result Below:' : 'Failed! Check your code and try again.'}</span>\r\n        </div>}\r\n        <>\r\n          {result\r\n          ? <Button\r\n            variant=\"secondary\"\r\n            onClick={clear}\r\n          >\r\n            Clear\r\n          </Button>\r\n          : <Button\r\n            variant=\"primary\"\r\n            onClick={runCode}\r\n          >\r\n            Run {isLoading && <LoadingIcon />}\r\n          </Button>}\r\n        </>\r\n      </div>\r\n      {(isResultVisible && result) &&\r\n      <div className=\"flex bg-gray-300 w-full rounded-md px-2\">\r\n        {result}\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CodeRunner;","import React from 'react';\r\n\r\nexport const CodeSnippet = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-gray-300 rounded-lg mb-1\">\r\n      <code className=\"flex flex-wrap whitespace-pre-wrap text-black px-3 py-2\">\r\n        { children }\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeSnippet;","import React, { useContext, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from './Header.module.scss';\r\n\r\nimport { AppContext } from '../../hoc/AppContext/AppContext';\r\n\r\nexport const Header = ({ toggleSidebar }) => {\r\n  const [globalState, ] = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"fixed w-full top-0 pt-2 pb-1 text-gray-700 bg-blue-300\">\r\n      <Button\r\n        className=\"fixed ml-1 p-1\"\r\n        variant=\"link\"\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FontAwesomeIcon icon=\"bars\" className=\"text-lg\" />\r\n      </Button>\r\n      <h2 className=\"text-center text-2xl font-bold leading-8 xs:text-3xl\">\r\n        Project Euler\r\n      </h2>\r\n      <div className=\"mx-4\">\r\n        <div className=\"flex flex-wrap max-w-3xl m-auto mt-1 flex justify-between text-sm text-center xs:mt-0\">\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"address-card\" />\r\n            <span className=\"text-gray-600 pl-2\">Zachary Young</span>\r\n          </div>\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"check\" />\r\n            <span className=\"text-gray-600 pl-2\">{globalState.completedProblems} out of {globalState.totalProblems}</span>\r\n          </div>\r\n          <div className={`${styles.date} mt-2 flex items-center`}>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"text-gray-600 pl-2\">Started on March 7, 2021</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const LoadingIcon = ({ size }) => (\r\n  <FontAwesomeIcon icon=\"circle-notch\" size={size} spin />\r\n);\r\n\r\nexport default LoadingIcon;","import React from 'react';\r\n\r\nexport const Overlay = ({ setOverlayVisible }) => (\r\n  <div\r\n    className=\"fixed w-screen h-screen inset-0 bg-gray-600 bg-opacity-70 z-10\"\r\n    onClick={() => setOverlayVisible(false)}\r\n  />\r\n);\r\n\r\nexport default Overlay;","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Overlay } from '../Overlay';\r\nimport problems from '../../constants/problems';\r\n\r\nexport const Sidebar = ({ open, select, toggle }) => {\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          `fixed inset-y-0 left-0 z-30 w-64 overflow-y-auto transition duration-300 ease-out transform translate-x-0bg-white border-r-2 bg-gray-100 pt-2\r\n          lg:translate-x-0 lg:static lg:inset-0 ${open ? \"ease-out translate-x-0\" : \"ease-in -translate-x-full\"}`}\r\n      >\r\n        {problems?.map(problem => (\r\n          <div\r\n            key={problem.key}\r\n            className=\"cursor-pointer py-2 pl-2 hover:bg-gray-200\"\r\n            onClick={() => select(problem)}\r\n          >\r\n            <span>{problem.key}: {problem.title}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {open &&\r\n        <Overlay setOverlayVisible={toggle} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { AppContext } from '../../hoc/AppContext/AppContext'\r\nimport { Header, CodeSnippet, CodeRunner, Sidebar } from '../../components';\r\nimport { problems } from '../../constants';\r\n\r\nconst ProjectEuler = (props) => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  const [visibleProblem, setVisibleProblem] = useState(problems[0]);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  const toggleSidebar = (state) => {\r\n    setIsSidebarOpen(state ?? !isSidebarOpen);\r\n  }\r\n\r\n  const selectProblem = (problem) => {\r\n    setVisibleProblem(problem);\r\n    toggleSidebar();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        open={isSidebarOpen}\r\n        select={selectProblem}\r\n        toggle={toggleSidebar}\r\n      />\r\n      <Header toggleSidebar={toggleSidebar} />\r\n      <div className=\"max-w-4xl mt-20 mx-auto p-4\">\r\n        {visibleProblem ?\r\n        <>\r\n          <div className=\"text-center text-2xl pb-2\">\r\n            <span>Problem {visibleProblem.key}: </span>\r\n            <span>{visibleProblem.title}</span>\r\n          </div>\r\n          {visibleProblem.prompt}\r\n          {!!visibleProblem.code &&\r\n          <div className=\"max-w-3xl mx-auto mb-1\">\r\n            <CodeSnippet>\r\n              {`${visibleProblem.codeStringified || visibleProblem.code?.toString()}`}\r\n            </CodeSnippet>\r\n            <CodeRunner code={visibleProblem.code} />\r\n          </div>}\r\n        </>\r\n        : <div>\r\n          Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve.\r\n          Although mathematics will help you arrive at elegant and efficient methods,\r\n          the use of a computer and programming skills will be required to solve most problems.\r\n        </div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectEuler;","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\nimport './App.scss';\nimport './index.css';\n\nimport { AppProvider } from './hoc/AppContext/AppContext';\nimport Layout from './components/Layout';\nimport ProjectEuler from './containers/ProjectEuler';\n\nconst iconList = Object\n  .keys(Icons)\n  .filter(key => key !== 'fas' && key !== 'prefix')\n  .map(icon => Icons[icon]);\nlibrary.add(...iconList);\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Layout>\n        <ProjectEuler />\n      </Layout>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}