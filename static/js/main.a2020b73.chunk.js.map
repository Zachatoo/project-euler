{"version":3,"sources":["components/Header/Header.module.scss","hoc/AppContext/AppContext.js","components/Layout/index.js","components/CodeRunner/index.js","components/CodeSnippet/index.js","components/Header/index.js","components/LoadingIcon/index.js","components/Overlay/index.js","constants/problems.js","components/Sidebar/index.js","containers/ProjectEuler/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","children","useState","globalState","setGlobalState","Provider","value","Layout","className","CodeRunner","code","isLoading","setIsLoading","isResultVisible","setIsResultVisible","result","setResult","executionTime","setExecutionTime","clear","useEffect","Button","variant","onClick","Promise","resolve","reject","startTime","performance","now","call","toString","endTime","then","res","finally","Collapse","in","CodeSnippet","Header","toggleSidebar","problemCount","icon","completedProblems","totalProblems","styles","date","LoadingIcon","size","spin","Overlay","setOverlayVisible","problems","key","title","prompt","i","push","join","codeStringified","completed","prevNum","nextNum","sum","MAX_NUM","Math","floor","sqrt","Sidebar","open","select","toggle","map","problem","DEFAULT_PROBLEM_COUNT","ProjectEuler","props","setProblemCount","localStorage","getItem","visibleProblem","setVisibleProblem","isSidebarOpen","setIsSidebarOpen","tempProblemCount","forEach","setItem","removeItem","state","iconList","Object","keys","Icons","filter","library","add","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2020b73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Header_date__1_KTb\"};","import React, { createContext, useState } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [globalState, setGlobalState] = useState();\r\n\r\n  return (\r\n    <AppContext.Provider value={[globalState, setGlobalState]}>\r\n      { children }\r\n    </AppContext.Provider>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen min-w-screen overflow-hidden\">\r\n      <main>\r\n        { children }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Collapse } from 'react-bootstrap';\r\n\r\nimport { LoadingIcon } from '../../components';\r\n\r\nexport const CodeRunner = ({ code }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isResultVisible, setIsResultVisible] = useState(false);\r\n  const [result, setResult] = useState();\r\n  const [executionTime, setExecutionTime] = useState();\r\n\r\n  const runCode = () => {\r\n    setIsLoading(true);\r\n    setIsResultVisible(false);\r\n    let promise = new Promise((resolve, reject) => {\r\n      const startTime = performance.now();\r\n      const result = code.call()?.toString();\r\n      const endTime = performance.now();\r\n      setExecutionTime(endTime - startTime);\r\n      if (result) resolve(result);\r\n      else reject();\r\n    });\r\n\r\n    promise.then(res => {\r\n      setResult(res);\r\n    }).finally(() => {\r\n      setIsResultVisible(true);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  \r\n  const clear = () => {\r\n    setResult(null);\r\n    setIsResultVisible(false);\r\n  }\r\n  useEffect(clear, [code]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`flex mb-1 ${isResultVisible ? \"justify-between\" : \"justify-end\"}`}>\r\n        {isResultVisible &&\r\n        <div className=\"flex bg-gray-200 w-full rounded-md px-2\">\r\n          <span className=\"my-auto\">{result ? `Success! Execution time: ${executionTime}ms` : 'Failed! Check your code and try again.'}</span>\r\n        </div>}\r\n        <>\r\n          {result &&\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"ml-1\"\r\n            onClick={clear}\r\n          >\r\n            Clear\r\n          </Button>}\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"ml-1\"\r\n            onClick={runCode}\r\n          >\r\n            Run {isLoading && <LoadingIcon />}\r\n          </Button>\r\n        </>\r\n      </div>\r\n      <Collapse in={isResultVisible && !!result}>\r\n        <div className=\"bg-gray-300 w-full rounded-md px-2\">\r\n          {result}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CodeRunner;","import React from 'react';\r\n\r\nexport const CodeSnippet = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-gray-300 rounded-lg mb-1\">\r\n      <code className=\"flex flex-wrap whitespace-pre-wrap text-black px-3 py-2\">\r\n        { children }\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeSnippet;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from './Header.module.scss';\r\n\r\n\r\nexport const Header = ({ toggleSidebar, problemCount }) => {\r\n  return (\r\n    <div className=\"fixed w-full top-0 pt-2 pb-1 text-gray-700 bg-blue-300\">\r\n      <Button\r\n        className=\"fixed ml-1 p-1\"\r\n        variant=\"link\"\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FontAwesomeIcon icon=\"bars\" className=\"text-lg\" />\r\n      </Button>\r\n      <h2 className=\"text-center text-2xl font-bold leading-8 xs:text-3xl\">\r\n        Project Euler\r\n      </h2>\r\n      <div className=\"mx-4\">\r\n        <div className=\"flex flex-wrap max-w-3xl m-auto mt-1 flex justify-between text-sm text-center xs:mt-0\">\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"address-card\" />\r\n            <span className=\"text-gray-600 pl-2\">Zachary Young</span>\r\n          </div>\r\n          <div className=\"mt-2 flex items-center\">\r\n            <FontAwesomeIcon icon=\"check\" />\r\n            <span className=\"text-gray-600 pl-2\">{problemCount.completedProblems} out of {problemCount.totalProblems}</span>\r\n          </div>\r\n          <div className={`${styles.date} mt-2 flex items-center`}>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"text-gray-600 pl-2\">Started on March 7, 2021</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const LoadingIcon = ({ size }) => (\r\n  <FontAwesomeIcon icon=\"circle-notch\" size={size} spin />\r\n);\r\n\r\nexport default LoadingIcon;","import React from 'react';\r\n\r\nexport const Overlay = ({ setOverlayVisible }) => (\r\n  <div\r\n    className=\"fixed w-screen h-screen inset-0 bg-gray-600 bg-opacity-70 z-10\"\r\n    onClick={() => setOverlayVisible(false)}\r\n  />\r\n);\r\n\r\nexport default Overlay;","export const problems = [\r\n  {\r\n    key: 1,\r\n    title: 'Multiples of 3 and 5',\r\n    prompt:\r\n      <>\r\n        <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.<br />\r\n        The sum of these multiples is 23.</p>\r\n        <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>\r\n      </>,\r\n    code: () => {\r\n      const MAX_NUM = 1000;\r\n      let result = [];\r\n      for (let i = 1; i < MAX_NUM; ++i) {\r\n        if (i % 3 === 0 || i % 5 === 0)\r\n          result.push(i);\r\n      }\r\n      return result.join(', ');\r\n    },\r\n    codeStringified:\r\n`const MAX_NUM = 1000;\r\nlet result = [];\r\nfor (let i = 1; i < MAX_NUM; ++i) {\r\n  if (i % 3 === 0 || i % 5 === 0)\r\n    result.push(i);\r\n}\r\nreturn result.join(', ');`,\r\n    completed: true,\r\n  },\r\n  {\r\n    key: 2,\r\n    title: 'Even Fibonacci numbers',\r\n    prompt:\r\n      <>\r\n        <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>\r\n        <p className=\"text-center\">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>\r\n        <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>\r\n      </>,\r\n    code: () => {\r\n      const MAX_NUM = 4000000;\r\n      let prevNum = 1;\r\n      let nextNum = 1;\r\n      let sum = 0;\r\n      while (nextNum <= MAX_NUM) {\r\n        if (nextNum % 2 === 0)\r\n          sum += nextNum;\r\n        prevNum = nextNum - prevNum;\r\n        nextNum += prevNum;\r\n      }\r\n      return sum;\r\n    },\r\n    codeStringified:\r\n`const MAX_NUM = 4000000;\r\nlet prevNum = 1;\r\nlet nextNum = 1;\r\nlet sum = 0;\r\nwhile (nextNum <= MAX_NUM) {\r\n  if (nextNum % 2 === 0)\r\n    sum += nextNum;\r\n  prevNum = nextNum - prevNum;\r\n  nextNum += prevNum;\r\n}\r\nreturn sum;`,\r\n    completed: true,\r\n  },\r\n  {\r\n    key: 3,\r\n    title: 'Largest prime factor',\r\n    prompt:\r\n      <>\r\n        <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>\r\n        <p>What is the largest prime factor of the number 600851475143?</p>\r\n      </>,\r\n    code: () => {\r\n      const MAX_NUM = 600851475143;\r\n      for(let i = Math.floor(Math.sqrt(MAX_NUM)); i >= 3; --i) {\r\n        if (MAX_NUM % i === 0)\r\n          return i;\r\n      }\r\n    },\r\n    completed: false,\r\n  },\r\n];","import React from 'react';\r\n\r\nimport { Overlay } from '../Overlay';\r\nimport { problems } from '../../constants';\r\n\r\nexport const Sidebar = ({ open, select, toggle }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          `fixed inset-y-0 left-0 z-30 w-64 overflow-y-auto transition duration-300 transform border-r-2 bg-gray-100\r\n          ${open ? \"ease-out translate-x-0\" : \"ease-in -translate-x-full\"}`}\r\n      >\r\n        <div\r\n          className=\"cursor-pointer py-2 pl-4 hover:bg-gray-200\"\r\n          onClick={() => select()}\r\n        >\r\n          <span>Project Description</span>\r\n        </div>\r\n        {problems?.map(problem => (\r\n          <div\r\n            key={problem.key}\r\n            className=\"cursor-pointer py-2 pl-2 hover:bg-gray-200\"\r\n            onClick={() => select(problem)}\r\n          >\r\n            <span>{problem.key}. {problem.title}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {open &&\r\n        <Overlay setOverlayVisible={toggle} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Header, CodeSnippet, CodeRunner, Sidebar } from '../../components';\r\nimport { problems } from '../../constants';\r\n\r\nconst DEFAULT_PROBLEM_COUNT = {\r\n  completedProblems: 0,\r\n  totalProblems: 100,\r\n};\r\n\r\nconst ProjectEuler = (props) => {\r\n  const [problemCount, setProblemCount] = useState(DEFAULT_PROBLEM_COUNT);\r\n  const [visibleProblem, setVisibleProblem] =\r\n    useState(problems[\r\n      localStorage.getItem('currentProblem') - 1 || 0\r\n    ]);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let tempProblemCount = {...problemCount};\r\n    let completed = 0;\r\n    problems.forEach(problem => {\r\n      if (problem.completed)\r\n        completed++;\r\n    });\r\n    tempProblemCount.completedProblems = completed;\r\n    setProblemCount(tempProblemCount);\r\n  }, [problems]);\r\n\r\n  useEffect(() => {\r\n    toggleSidebar(false);\r\n    if (visibleProblem)\r\n      localStorage.setItem('currentProblem', visibleProblem.key);\r\n    else\r\n      localStorage.removeItem('currentProblem');\r\n  }, [visibleProblem]);\r\n\r\n  const toggleSidebar = (state) => {\r\n    setIsSidebarOpen(state ?? !isSidebarOpen);\r\n  }\r\n\r\n  const selectProblem = (problem) => {\r\n    setVisibleProblem(problem);\r\n    toggleSidebar(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        open={isSidebarOpen}\r\n        select={selectProblem}\r\n        toggle={toggleSidebar}\r\n      />\r\n      <Header toggleSidebar={toggleSidebar} problemCount={problemCount} />\r\n      <div className=\"max-w-4xl mt-20 mx-auto p-4\">\r\n        {visibleProblem ?\r\n        <>\r\n          <div className=\"text-center text-2xl pb-2\">\r\n            <span>Problem {visibleProblem.key}: </span>\r\n            <span>{visibleProblem.title}</span>\r\n          </div>\r\n          {visibleProblem.prompt}\r\n          {!!visibleProblem.code &&\r\n          <div className=\"max-w-3xl mx-auto mb-1\">\r\n            <CodeSnippet>\r\n              {`${visibleProblem.codeStringified || visibleProblem.code?.toString()}`}\r\n            </CodeSnippet>\r\n            <CodeRunner code={visibleProblem.code} />\r\n          </div>}\r\n        </>\r\n        : <div>\r\n          Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve.\r\n          Although mathematics will help you arrive at elegant and efficient methods,\r\n          the use of a computer and programming skills will be required to solve most problems.\r\n        </div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectEuler;","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\nimport './App.scss';\nimport './index.css';\n\nimport { AppProvider } from './hoc/AppContext/AppContext';\nimport Layout from './components/Layout';\nimport ProjectEuler from './containers/ProjectEuler';\n\nconst iconList = Object\n  .keys(Icons)\n  .filter(key => key !== 'fas' && key !== 'prefix')\n  .map(icon => Icons[icon]);\nlibrary.add(...iconList);\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Layout>\n        <ProjectEuler />\n      </Layout>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}