export const problems = [
  {
    key: 1,
    title: 'Multiples of 3 and 5',
    prompt:
      <>
        <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.<br />
        The sum of these multiples is 23.</p>
        <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>
      </>,
    codeStringified:
`var sum = 0;
for (var i = 1; i < 1000; ++i)
{
  if (i % 3 == 0 || i % 5 == 0)
    sum += i;
}
return sum;`,
    completed: true,
  },
  {
    key: 2,
    title: 'Even Fibonacci numbers',
    prompt:
      <>
        <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
        <p className="text-center">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
        <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>
      </>,
    codeStringified:
`var maxNum = 4000000;
var prevNum = 1;
var nextNum = 1;
var sum = 0;
while (nextNum <= maxNum)
{
  if (nextNum % 2 == 0)
    sum += nextNum;
  prevNum = nextNum - prevNum;
  nextNum += prevNum;
}
return sum;`,
    completed: true,
  },
  {
    key: 3,
    title: 'Largest prime factor',
    prompt:
      <>
        <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>
        <p>What is the largest prime factor of the number 600851475143?</p>
      </>,
    codeStringified:
`var targetNum = 600851475143;

static bool IsPrime(long num)
{
  var result = num > 1;
  for (var i = 2; i < Math.Floor(Math.Sqrt(num)) + 1; ++i)
  {
    if (num % i == 0)
    {
      result = false;
      break;
    }
  }
  return result;
}

for (var i = targetNum / 2; i >= 3; --i)
{
  if (targetNum % i == 0)
  {
    if (IsPrime(i))
    {
      return i;
    }
  }
}`,
    completed: false,
  },
];