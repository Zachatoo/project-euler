export const problems = [
  {
    key: 1,
    title: 'Multiples of 3 and 5',
    prompt:
      <>
        <p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.<br />
        The sum of these multiples is 23.</p>
        <p>Find the sum of all the multiples of 3 or 5 below 1000.</p>
      </>,
    code: () => {
      const MAX_NUM = 1000;
      let sum = 0;
      for (let i = 1; i < MAX_NUM; ++i) {
        if (i % 3 === 0 || i % 5 === 0)
          sum += i;
      }
      return sum;
    },
    codeStringified:
`const MAX_NUM = 1000;
let sum = 0;
for (let i = 1; i < MAX_NUM; ++i) {
  if (i % 3 === 0 || i % 5 === 0)
    sum += i;
}
return sum;`,
    completed: true,
  },
  {
    key: 2,
    title: 'Even Fibonacci numbers',
    prompt:
      <>
        <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
        <p className="text-center">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
        <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>
      </>,
    code: () => {
      const MAX_NUM = 4000000;
      let prevNum = 1;
      let nextNum = 1;
      let sum = 0;
      while (nextNum <= MAX_NUM) {
        if (nextNum % 2 === 0)
          sum += nextNum;
        prevNum = nextNum - prevNum;
        nextNum += prevNum;
      }
      return sum;
    },
    codeStringified:
`const MAX_NUM = 4000000;
let prevNum = 1;
let nextNum = 1;
let sum = 0;
while (nextNum <= MAX_NUM) {
  if (nextNum % 2 === 0)
    sum += nextNum;
  prevNum = nextNum - prevNum;
  nextNum += prevNum;
}
return sum;`,
    completed: true,
  },
  {
    key: 3,
    title: 'Largest prime factor',
    prompt:
      <>
        <p>The prime factors of 13195 are 5, 7, 13 and 29.</p>
        <p>What is the largest prime factor of the number 600851475143?</p>
      </>,
    code: () => {
      const TARGET_NUM = 600851475143; // 6857

      function isPrime(num) {
        let result = num > 1;
        for (let i = 2; i < Math.floor(Math.sqrt(num)) + 1; ++i) {
          if (num % i === 0) {
            result = false;
            break;
          }
        }
        return result;
      }

      function isPrimeFactor(num, targetNum) {
        console.log('checking for prime factor');
        let result = false;
        for (let i = 2; i <= num; ++i) {
          if (num * i === targetNum) {
            result = true;
            break;
          }
        }
        console.log('finished checking', result);
        return result;
      }

      let result;
      for(let i = Math.floor(TARGET_NUM / 2); i >= 3; --i) {
        if (isPrime(i)) {
          if (TARGET_NUM % i === 0) {
            console.log('TARGET_NUM % i', TARGET_NUM % i);
            result = i;
            break;
          }
        }
      }
      return result;
    },
    completed: false,
  },
];